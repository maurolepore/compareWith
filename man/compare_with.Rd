% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compare.R
\name{compare_with}
\alias{compare_with}
\title{File comparison}
\usage{
compare_with(file = NULL, path = NULL, caller = NULL)
}
\arguments{
\item{file}{Optional path to an existing file to be compared. If \code{NULL} (the
default), the active RStudio file is used.}

\item{path}{Path of the initial directory for selecting the second file to
compare against via \code{\link[=selectFile]{selectFile()}}. If \code{NULL} (the default), the directory
of the first \code{file} is used. Use \code{NA} to compare a \code{file} under version
control for with the repository version.}

\item{caller}{String information about the caller, to customize error
messages.}
}
\value{
Invisibly returns the result of calling \code{meld} via \code{\link[=system2]{system2()}}.
}
\description{
Compare (active) \code{file} to a another selected by the user or to the version
control repository.
}
\examples{
\dontrun{
# compare active file, select second file from the same directory
compare_with()
# compare active file, select second file from the working directory
compare_with(path = getwd())
# compare active file, select second file from the home directory
compare_with(path = "~")
# compare a given file, select second file from the working directory
compare_with(file = "~/file1.ext", path = getwd())
# compare a given file under version control with the repository version
compare_with(file = "~/file1.ext", path = NA)
# custom caller information upon error, e.g. from a wrapper function
compare_home_dir <- function(file) {
  compare_with(file, path = "~", caller = "compare_home_dir")
}
my_wrapper("non/existing/file") # customized error message
}

}
\seealso{
\link[=compareWith-addins]{RStudio addins} for file and project comparison
with support for version control.
}
